name: "Prerelease"
env:
  SUBWASM_VERSION: 0.13.2
  SRTOOL_TAG: 1.53.0-0.9.16
on:
  workflow_dispatch:
    inputs:
      srtool_tag:
        description: The SRTOOL tag to use
        # keep the same as `env.SRTOOL_TAG`
        default: 1.53.0-0.9.16
        required: false
  push:
    branches:
      - workshop
    paths-ignore:
      - '.github/workflows/**'

jobs:
  main:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        chain: [ "parachain" ]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Dockerhub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Declare some variables
        id: vars
        shell: bash
        run: |
          echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
          echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      - name: Build and push
        id:   docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          file: docker/release.Dockerfile
          tags: |
            onfinality/parachain-template:dev
            onfinality/parachain-template:${{ steps.vars.outputs.sha_short }}
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
      - name: Srtool build
        id: srtool_build
        uses: chevdor/srtool-actions@v0.3.0
        with:
          chain: ${{ matrix.chain }}
          tag: ${{ github.event.inputs.srtool_tag || env.SRTOOL_TAG }}
      - name: Summary
        run: |
          echo '${{ steps.srtool_build.outputs.json }}' | jq > ${{ matrix.chain }}-srtool-digest.json
          cat ${{ matrix.chain }}-srtool-digest.json
          echo "Runtime location: ${{ steps.srtool_build.outputs.wasm }}"
          # it takes a while to build the runtime, so let's save the artifact as soon as we have it
          - name: Archive Artifacts for ${{ matrix.chain }}
            uses: actions/upload-artifact@v2
            with:
              name: ${{ matrix.chain }}-runtime
              path: |
                ${{ steps.srtool_build.outputs.wasm }}
                ${{ steps.srtool_build.outputs.wasm_compressed }}
                ${{ matrix.chain }}-srtool-digest.json
      - name: Install subwasm ${{ env.SUBWASM_VERSION }}
        run: |
          wget https://github.com/chevdor/subwasm/releases/download/v${{ env.SUBWASM_VERSION }}/subwasm_linux_amd64_v${{ env.SUBWASM_VERSION }}.deb
          sudo dpkg -i subwasm_linux_amd64_v${{ env.SUBWASM_VERSION }}.deb
          subwasm --version
      - name: Show Runtime information
        run: |
          subwasm info ${{ steps.srtool_build.outputs.wasm }}
          subwasm info ${{ steps.srtool_build.outputs.wasm_compressed }}
          subwasm --json info ${{ steps.srtool_build.outputs.wasm }} > ${{ matrix.chain }}-info.json
          subwasm --json info ${{ steps.srtool_build.outputs.wasm_compressed }} > ${{ matrix.chain }}-info_compressed.json
      - name: Extract the metadata
        run: |
          subwasm meta ${{ steps.srtool_build.outputs.wasm }}
          subwasm --json meta ${{ steps.srtool_build.outputs.wasm }} > ${{ matrix.chain }}-metadata.json
      - name: Check the metadata diff
        run: |
          subwasm get wss://karura-rpc-2.aca-api.network/ws --output runtime_mainnet.wasm
          subwasm diff ${{ steps.srtool_build.outputs.wasm }} runtime_mainnet.wasm | tee ${{ matrix.chain }}-diff.txt
      - name: Archive Subwasm results
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.chain }}-runtime
          path: |
            ${{ matrix.chain }}-info.json
            ${{ matrix.chain }}-info_compressed.json
            ${{ matrix.chain }}-metadata.json
            ${{ matrix.chain }}-diff.txt
